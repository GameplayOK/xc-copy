name: Publish-Receive

on:
  push:
    branches:
      - deploy-*
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+rc[0-9]+"

jobs:
  publish:
    name: publsh-receive-image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Define image tags
        id: tags
        env:
          IMAGES: "ghcr.io/gameplayok/xc-copy"
        run: |
          case $GITHUB_REF in
            refs/tags/*)  TAG_ID=${GITHUB_REF#refs/tags/};;
            refs/heads/*) TAG_ID=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g');;
            *)            TAG_ID=sha-${GITHUB_SHA};;
          esac

          TAGS=()
          for image in $IMAGES; do
            TAGS+=("${image}-receive:${TAG_ID}")

            if [[ "$(cat .version)" == "$TAG_ID" ]]; then
              TAGS+=("${image}-receive:latest")
            fi
          done

          echo ::set-output name=version::${TAG_ID}
          echo ::set-output name=tags::$(IFS=,; echo "${TAGS[*]}")
          echo ::set-output name=commit_hash::${GITHUB_SHA}
          echo ::set-output name=build_date::$(git show -s --format=%cI)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name == 'push'

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./src/
          file: ./src/container/receive.Dockerfile
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.tags.outputs.tags }}
          build-args: |
            VERSION=${{ steps.tags.outputs.version }}
            COMMIT_HASH=${{ steps.tags.outputs.commit_hash }}
            BUILD_DATE=${{ steps.tags.outputs.build_date }}
          labels: |
            org.opencontainers.image.created=${{ steps.tags.outputs.build_date }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.version=${{ steps.tags.outputs.version }}
